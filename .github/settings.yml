# SPDX-FileCopyrightText: 2023 froggie <incoming@frogg.ie>
#
# SPDX-License-Identifier: OSL-3.0

# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  name: tripreporter

  # A short description of the repository that will show up on GitHub
  description: A community-powered and universal platform for submitting and analyzing trip reports.

  # A URL with more information about the repository
  #homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  #topics: github, probot

  # Either `true` to make the repository private, or `false` to make it public.
  private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: true

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Updates the default branch for this repository.
  default_branch: master

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
  - name: backend:api
    color: '#1CE8B9'
    description: 'Related to the API design'

  - name: backend:building
    color: '#1CE8B9'
    description: 'Related to the build system'

  - name: backend:deps
    color: '#1CE8B9'
    description: 'Related to backend dependencies'

  - name: backend:db
    color: '#1CE8B9'
    description: 'Related to database structure / design'

  - name: backend:models
    color: '#1CE8B9'
    description: 'Related to the model design'

  - name: backend:other
    color: '#1CE8B9'
    description: 'Related to the backend code'

  - name: bug
    color: '#d73a4a'
    description: 'Something isn''t working'

  - name: improvement
    color: '#d73a4a'
    description: 'New feature or request'

  - name: meta:docs
    color: '#0075ca'
    description: 'Improvements or additions to documentation'

  - name: triage:blocked
    color: '#c5def5'
    description: 'Blocked by another issue'

  - name: triage:duplicate
    color: '#c5def5'
    description: 'This issue or pull request already exists'

  - name: triage:invalid
    color: '#c5def5'
    description: 'This doesn''t seem right'

  - name: triage:pending
    color: '#c5def5'
    description: 'Pending triage'

  - name: triage:question
    color: '#c5def5'
    description: 'Further information is requested'

  - name: triage:wontfix
    color: '#c5def5'
    description: 'This will not be worked on'

  - name: web:analytics
    color: '#AC01E6'
    description: 'Related to analytics and statistics of the TripReporter''s use and performance'

  - name: web:deps
    color: '#AC01E6'
    description: 'Related to frontend dependencies'

  - name: web:frontend
    color: '#AC01E6'
    description: 'Related to the frontend UI'

  - name: web:seo
    color: '#AC01E6'
    description: 'Related to SEO'

# Milestones: define milestones for Issues and Pull Requests. State is either 'open' or 'closed'.
milestones:
  - title: 1.0.0
    description: Required for stable 1.0.0 release
    state: open
  - title: long-term
    description: For issues that are planned further into the future
    state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
collaborators:
# - username: bkeepers
#   permission: push
# - username: hubot
#   permission: pull

# Note: `permission` is only valid on organization-owned repositories.
# The permission to grant the collaborator. Can be one of:
# * `pull` - can pull, but not push to or administer this repository.
# * `push` - can pull and push, but not administer this repository.
# * `admin` - can pull, push and administer this repository.
# * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
# * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
#teams:
#  - name: core
    # The permission to grant the team. Can be one of:
    # * `pull` - can pull, but not push to or administer this repository.
    # * `push` - can pull and push, but not administer this repository.
    # * `admin` - can pull, push and administer this repository.
    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
#    permission: admin
#  - name: docs
#    permission: push

branches:
  - name: master
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: null
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: false
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      # Optional. Permits force pushes to the protected branch by anyone with write access to the repository.
      allow_force_pushes: false
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up-to-date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
        contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: false
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable. Default is '[]'.
      restrictions:
        apps: null
        users: null
        teams: null